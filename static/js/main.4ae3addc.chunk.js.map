{"version":3,"sources":["App.js","components/Result.js","components/calc.js","reportWebVitals.js","index.js"],"names":["App","onClick","button","calculate","reset","setState","result","state","eval","error","backspace","slice","className","this","Component","ResultComponent","props","Calculator","map","index","Button","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"miDAMMA,I,gYACF,eAAc,IAAD,iMACT,wBADS,MAQbC,QAAU,SAAAC,GAEM,MAAXA,IACDA,EAAS,KAEK,MAAXA,EACC,MAAKC,YAEU,OAAXD,EACN,MAAKE,QAIH,MAAKC,SAAS,CACVC,OAAQ,MAAKC,MAAMD,OAASJ,KAtB3B,MA4BbC,UAAY,WACR,IACI,MAAKE,SAAS,CAEVC,QAASE,KAAK,MAAKD,MAAMD,SAAW,KAAQ,KAElD,MAAOG,OACL,MAAKJ,SAAS,CACVC,OAAQ,YApCP,MA0CbF,MAAQ,WACJ,MAAKC,SAAS,CACVC,OAAQ,MA5CH,MAgDbI,UAAY,WACR,MAAKL,SAAS,CACVC,OAAQ,MAAKC,MAAMD,OAAOK,MAAM,GAAI,MA/CxC,MAAKJ,MAAQ,CACTD,OAAQ,IAJH,M,uMAsDb,WACI,OACI,2EACI,mEAAKM,UAAU,kBAAf,UACI,+FACA,2DAAC,kDAAD,CAAiBN,OAAQO,KAAKN,MAAMD,SAEpC,2DAAC,gDAAD,CAAYL,QAASY,KAAKZ,mB,KA9D5Ba,8CAqEHd,2B,2ECzETe,E,4JAGF,WACI,IAAKT,EAAUO,KAAKG,MAAfV,OACL,OACI,qBAAKM,UAAU,SAAf,SACI,4BAAIN,U,GAPUQ,aAcfC,O,kFCbTE,E,4JAKF,WAAU,IAAD,OAEL,OACI,qBAAKL,UAAU,SAAf,SAFW,CAAC,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,KAG5DM,KAAI,SAAChB,EAAOiB,GACjB,OAAO,cAACC,EAAD,CAAoBC,KAAMnB,EAAQD,QAAS,kBAAM,EAAKe,MAAMf,QAAQC,KAAvDiB,Y,GAVXL,aAiBnBM,EAAS,SAAAJ,GACX,OAAO,wBAAQf,QAASe,EAAMf,QAAvB,SAAiCe,EAAMK,QAGnCJ,O,8GCZAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAA,EAAD,MAEFkC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ae3addc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ResultComponent from './components/Result';\nimport Calculator from './components/calc';\n// import KeyPadComponent from \"./components/Calculator\";\n\nclass App extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            result: \"\"\n        }\n    }\n\n    onClick = button => {\n\n      if(button === 'x'){\n        button = '*'\n      }\n        if(button === '='){\n            this.calculate()\n        }\n        else if(button === \"AC\"){\n          this.reset()\n        }\n\n        else {\n            this.setState({\n                result: this.state.result + button\n            })\n        }\n    };\n\n\n    calculate = () => {\n        try {\n            this.setState({\n                // eslint-disable-next-line\n                result: (eval(this.state.result) || \"0\" ) + \"\"\n            })\n        } catch (error) {\n            this.setState({\n                result: \"error\"\n            })\n\n        }\n    };\n\n    reset = () => {\n        this.setState({\n            result: \"\"\n        })\n    };\n\n    backspace = () => {\n        this.setState({\n            result: this.state.result.slice(0, -1)\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"calculator-body\">\n                    <h1>React Calculator</h1>\n                    <ResultComponent result={this.state.result}/>\n                    {/* <KeyPadComponent onClick={this.onClick}/> */}\n                    <Calculator onClick={this.onClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\n\r\nclass ResultComponent extends Component {\r\n\r\n\r\n    render() {\r\n        let {result} = this.props;\r\n        return (\r\n            <div className=\"result\">\r\n                <p>{result}</p>\r\n            </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default ResultComponent;","import React, {Component} from \"react\";\r\nimport '../App.css';\r\n\r\nclass Calculator extends Component {\r\n    // onClick=button=> {\r\n    //     console.log(button);  \r\n    // };\r\n    \r\n    render() {\r\n        const buttons= ['(',')','%','AC',7,8,9,'/',4,5,6,'x',1,2,3,'-',0,'.','=','+'];\r\n        return (\r\n            <div className=\"button\">\r\n            {buttons.map((button,index) => {\r\n                return <Button key={index} name={button} onClick={() => this.props.onClick(button)} />;        \r\n            })}\r\n        </div>     \r\n        );  \r\n    }\r\n}\r\n\r\nconst Button = props => {\r\n    return <button onClick={props.onClick}>{props.name}</button>;\r\n};\r\n\r\nexport default Calculator;\r\n\r\n// click={() =>this.clickHandler(button)}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}